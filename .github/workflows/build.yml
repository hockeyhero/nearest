name: nearest-build
# build nearest

# run this workflow on demand, when there is a push to the repo, or on a pull request. 
on:
  workflow_dispatch:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest 
    env:
      DB_DATABASE: hockeyhero_nearest
      DB_USER: root
      DB_PASSWORD: root
      
      SPRING_PROFILES_ACTIVE: test
      SPRING_JPA_HIBERNATE_DDL-AUTO: none   
      SPRING_DATASOURCE_URL: jdbc:mysql://root@localhost/hockeyhero_nearest?useUnicode=true&characterEncoding=utf8    

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'microsoft'
        java-version: '17.0.3'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.8.2  
        
    - name: Build the Jar
      run: mvn clean package -DskipTests
      
    - name: Copy jar file to here
      run: cp ./target/*.jar app.jar
      
    - name: Analyze code with SonarQube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ ! -z "$SONAR_TOKEN" ]; then
              ./mvnw -ntp initialize sonar:sonar -Dsonar.host.url=https://sonarcloud.io
        else
              echo No SONAR_TOKEN, skipping...
        fi      
      
    - name: Create Database
      run: |
        sudo /etc/init.d/mysql start
         mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} 
         
    - name: Create Tables
      run: |
        sudo /etc/init.d/mysql start        
         mysql -h 127.0.0.1 -u root hockeyhero_nearest < src/test/resources/createtables.sql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
         
    - name: Insert Data
      run: |
        sudo /etc/init.d/mysql start          
        mysql -h 127.0.0.1 -u root hockeyhero_nearest < src/test/resources/insertdata.sql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
 
    - name: Run Test Procedures
      run: |
        sudo /etc/init.d/mysql start      
        mysql -h 127.0.0.1 -u root hockeyhero_nearest < src/test/resources/testprocedures.sql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
                
    - name: run the App
      run: java ${JAVA_OPTS} -Dspring.profiles.active=prod -Dspring_datasource_username=${{ env.DB_USER }} -Dspring_datasource_password=${{ env.DB_PASSWORD }}  -jar app.jar
       
    - name: Install Postman CLI
      run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          
    - name: Login to Postman CLI
      run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      
    - name: Run API tests
      run: |
          postman collection run "6193541-a430ba00-51aa-4eea-a107-ef61bc68d3df" -e "6193541-093bcd8a-994f-4375-bf71-4199cc5a0380" --integration-id "124875-${{ github.run_id }}"
          postman collection run "6193541-8e7acb0e-6423-47fd-9e91-48e03ad2b0e5" -e "6193541-093bcd8a-994f-4375-bf71-4199cc5a0380" --integration-id "124875-${{ github.run_id }}"
          # Lint your API using Postman CLI
          postman api lint --integration-id 124875

    - name: Deploy to Heroku
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
          if [ ! -z "$HEROKU_API_KEY" ]; then
              ./mvnw -ntp com.heroku.sdk:heroku-maven-plugin:2.0.5:deploy -DskipTests -Pprod -Dheroku.buildpacks=heroku/jvm -Dheroku.appName=hockeyhero
          else
              echo No HEROKU_API_KEY, skipping...
          fi
          
    - name: Publish docker image
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      run: |
          GIT_TAG=:${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#:refs/heads/main}
          ./mvnw -ntp jib:build -Djib.to.image=davidewan/hockeyhero_nearest${DOCKER_TAG} -Djib.to.auth.username="${{secrets.DOCKER_USERNAME}}" -Djib.to.auth.password="${{secrets.DOCKER_PASSWORD}}" -Pprod
    
